import type { VFC, FC, ReactChild } from 'react';
import { Children } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useTranslation } from 'next-i18next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import { Button, Typography } from 'antd';
import { IconContext } from 'react-icons';
import { AiOutlineApi, AiOutlineTeam, AiOutlineCloud } from 'react-icons/ai';

import { IndexLayout } from '@/components/layout/IndexLayout';
import { cx } from '@/features/cx';
import Link from 'next/link';

type classNameProps = {
  className?: string;
};

const SectionContainer: FC<classNameProps> = ({ children, className }) => (
  <>
    <div className={cx('mx-[-100rem] px-[100rem] pt-6 pb-10', className)}>{children}</div>
  </>
);

const SectionTitle: FC<classNameProps> = ({ children, className }) => (
  <>
    <h2 className="mb-6">
      <span className={cx('text-2xl border-b-4 pl-2 pr-10 pb-[0.1rem]', className)}>{children}</span>
    </h2>
  </>
);

type CardProps = {
  title: string;
  description: string;
  textClass?: string;
  icon?: ReactChild;
  className?: string;
};

const CardContainer: FC = ({ children }) => {
  return (
    <>
      <div className="flex flex-wrap md:space-x-4 space-y-4 md:space-y-0">{children}</div>
    </>
  );
};

const Card: VFC<CardProps> = ({ title, description, icon, textClass, className }) => (
  <>
    <div
      className={cx(
        'w-full md:flex-1 flex space-x-4 md:flex-col items-center bg-black/10 p-4 rounded-md shadow-md',
        className
      )}
    >
      <div>
        <IconContext.Provider value={{ size: '4rem', color: 'whitesmoke' }}>{icon}</IconContext.Provider>
      </div>
      <div>
        <Typography.Title level={3} className={cx('font-bold !text-xl md:text-center mt-1 mb-2', textClass)}>
          {title}
        </Typography.Title>
        <Typography.Text className={textClass}>{description}</Typography.Text>
      </div>
    </div>
  </>
);

const Home: NextPage = () => {
  const [t] = useTranslation('index');

  return (
    <>
      <Head>
        <title>Laze - {t('motto')} | Laze</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <IndexLayout>
        <h1 className="hidden">{t('title')}</h1>
        <Typography.Text className="block !text-8xl font-semibold">Laze</Typography.Text>
        <Typography.Text className="block text-xl mt-4">{t('motto')}</Typography.Text>
        <Button type="primary" size="large" className="mt-8 ml-4 mb-8">
          <Link href="/editor">{t('Try Laze')}</Link>
        </Button>

        <SectionContainer className="bg-[#2b5b84]">
          <SectionTitle className="!text-whitesmoke border-[#1e405e]">{t('Laze Features')}</SectionTitle>
          <CardContainer>
            <Card
              title={t('features.1.title')}
              description={t('features.1.description')}
              textClass="!text-whitesmoke"
              icon={<AiOutlineTeam />}
            />
            <Card
              title={t('features.2.title')}
              description={t('features.2.description')}
              textClass="!text-whitesmoke"
              icon={<AiOutlineApi />}
            />
            <Card
              title={t('features.3.title')}
              description={t('features.3.description')}
              textClass="!text-whitesmoke"
              icon={<AiOutlineCloud />}
            />
          </CardContainer>
        </SectionContainer>

        <SectionContainer className="bg-whitesmoke">
          <SectionTitle className="border-primary-400">{t('Laze Production')}</SectionTitle>
          <CardContainer>
            <Card title={t('productions.1.title')} description={t('productions.1.description')} />
            <Card title={t('productions.2.title')} description={t('productions.2.description')} />
            <Card
              title={t('productions.3.title')}
              description={t('productions.3.description')}
              className="opacity-50"
            />
          </CardContainer>
        </SectionContainer>

        <SectionContainer className="bg-primary-600">
          <SectionTitle className="border-primary-800 text-whitesmoke">{t('Join Laze')}</SectionTitle>
          <CardContainer>
            <Card title={t('activities.1.title')} description={t('activities.1.description')} />
            <Card title={t('activities.2.title')} description={t('activities.2.description')} />
            <Card title={t('activities.3.title')} description={t('activities.3.description')} />
          </CardContainer>
        </SectionContainer>
      </IndexLayout>
    </>
  );
};

type contextType = {
  locale: string;
};
export const getStaticProps = async (context: contextType) => {
  return {
    props: {
      ...(await serverSideTranslations(context.locale, ['common', 'layout', 'index'])),
    },
  };
};

export default Home;
